---
# Source: flask-dynamodb-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-flask-dynamodb-app
  labels:
    helm.sh/chart: flask-dynamodb-app-0.1.0
    app.kubernetes.io/name: flask-dynamodb-app
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v7"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: flask-dynamodb-app
    app.kubernetes.io/instance: my-release
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 5000
---
# Source: flask-dynamodb-app/templates/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-flask-dynamodb-app
  labels:
    helm.sh/chart: flask-dynamodb-app-0.1.0
    app.kubernetes.io/name: flask-dynamodb-app
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: flask-dynamodb-app
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flask-dynamodb-app
        app.kubernetes.io/instance: my-release
    spec:
      containers:
      - name: flask-dynamodb-app
        image: githubcitests/flask-demo:v7
        envFrom:
          - secretRef:
              name: iam-connection-secrets
          - secretRef:
              name: dynamodb-connection-details
        startupProbe:
          httpGet:
            path: /health
            port: 5000
          failureThreshold: 30
          periodSeconds: 10
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
---
# Source: flask-dynamodb-app/templates/dynamodb-claim.yaml
apiVersion: platform.hsdp.io/v1alpha1
kind: DynamoDBTable
metadata:
  name: table-provisioned-composite-key
  namespace: default
  labels:
    helm.sh/chart: flask-dynamodb-app-0.1.0
    app.kubernetes.io/name: flask-dynamodb-app
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v7"
    app.kubernetes.io/managed-by: Helm
spec:
  resourceConfig:
    deletionPolicy: Delete
  tableSetting:
    hashKey: name
    hashKeyType: S
    rangeKey: type
    rangeKeyType: S
    readCapacity: 5
    writeCapacity: 5
  restoreSetting:
   pointInTimeRecovery:
      enabled: true
  writeConnectionSecretToRef:
    name: dynamodb-connection-details
---
# Source: flask-dynamodb-app/templates/iam-user-claim.yaml
# Policy contains wildcards. If you want a more restrictive policy, please do not use directly
apiVersion: platform.hsdp.io/v1alpha1
kind: IAMUser
metadata:
  name: dynamodb-user
  namespace: default
  labels:
    helm.sh/chart: flask-dynamodb-app-0.1.0
    app.kubernetes.io/name: flask-dynamodb-app
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v7"
    app.kubernetes.io/managed-by: Helm
spec:
  parameters:
    policy: | 
      {"Statement":[{"Action":["dynamodb:*"],"Effect":"Allow","Resource":["arn:aws:dynamodb:*:*:table/table-provisioned-composite-key-*","arn:aws:dynamodb:*:*:table/table-provisioned-composite-key-*/*"],"Sid":"AllAPIActionsOnUserSpecificTable"}],"Version":"2012-10-17"}
  writeConnectionSecretToRef:
    name: iam-connection-secrets
