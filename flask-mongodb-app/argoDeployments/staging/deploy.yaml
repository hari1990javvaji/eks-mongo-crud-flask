---
# Source: flask-mongodb-app/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb
  namespace: dbtest
secrets:
- name: mongodb
---
# Source: flask-mongodb-app/templates/pull-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dockerregistrykey
  namespace: dbtest
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodWIuZG9ja2VyLmNvbSI6eyJ1c2VybmFtZSI6ImhqYXZ2YWppIiwicGFzc3dvcmQiOiJraXNob3JlaGFyaSIsImVtYWlsIjoiaGtpc2hvcmU0MkBnbWFpbC5jb20iLCJhdXRoIjoiYUdwaGRuWmhhbWs2YTJsemFHOXlaV2hoY21rPSJ9fX0=
---
# Source: flask-mongodb-app/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: mongodb
  namespace: dbtest
data:
    mongodb-root-password: bW9uZ29kYjEyMw==
---
# Source: flask-mongodb-app/templates/mongo-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb-headless
  namespace: dbtest
  labels:
    app: mongodb
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongodb
---
# Source: flask-mongodb-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: crud-flask-mongodb-app
  namespace: dbtest
  labels:
    helm.sh/chart: flask-mongodb-app-0.1.0
    app.kubernetes.io/name: flask-mongodb-app
    app.kubernetes.io/instance: crud
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app.kubernetes.io/name: flask-mongodb-app
    app.kubernetes.io/instance: crud
    app: flask-mongodb-app
---
# Source: flask-mongodb-app/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crud-flask-mongodb-app
  namespace: dbtest
  labels:
    app: flask-mongodb-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-mongodb-app
  template:
    metadata:
      labels:
        app: flask-mongodb-app
    spec:
      imagePullSecrets:
      - name: myregistrykey
      containers:
        - name: flask-mongodb-app
          image: "hjavvaji/flask-mongo-crud:34"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MONGO_SERVICE_NAME
              value: mongodb-headless
            - name: MONGODB_HOSTNAME
              value: "mongodb-0.$(MONGO_SERVICE_NAME).$(FLASK_NAMESPACE).svc.cluster.local"
            - name: MONGODB_USERNAME
              value: mongodbuser
            - name: MONGODB_DATABASE
              value: systeam
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: mongodb-root-password
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
---
# Source: flask-mongodb-app/templates/mongo-stateful.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: dbtest
  labels:
    app: mongodb
spec:
  serviceName: mongodb-headless
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      serviceAccountName: mongodb
      containers:
        - name: flask-mongodb-app-mongodb
          image: "mongo:4.0.17"
          imagePullPolicy: IfNotPresent
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: mongodbuser
          - name: MONGO_INITDB_DATABASE
            value: systeam
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb
                key: mongodb-root-password
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongoflask
              mountPath: /data/db
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 100Mi
  volumeClaimTemplates:
    - metadata:
        name: mongoflask
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
